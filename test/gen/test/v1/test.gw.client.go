// Code generated by protoc-gen-grpc-gateway-client. DO NOT EDIT.
// source: test/v1/test.proto

package testv1

import (
	context "context"
	fmt "fmt"
	gateway "github.com/akuity/go-akuity/pkg/grpc/gateway"
	url "net/url"
)

// TestServiceGatewayClient is the interface for TestService service client.
type TestServiceGatewayClient interface {
	SendInvitation(context.Context, *SendInvitationRequest) (*SendInvitationResponse, error)
	TrackInvitation(context.Context, *TrackInvitationRequest) (<-chan *TrackInvitationResponse, <-chan error, error)
}

func NewTestServiceGatewayClient(c gateway.Client) TestServiceGatewayClient {
	return &testServiceGatewayClient{
		gwc: c,
	}
}

type testServiceGatewayClient struct {
	gwc gateway.Client
}

func (c *testServiceGatewayClient) SendInvitation(ctx context.Context, req *SendInvitationRequest) (*SendInvitationResponse, error) {
	gwReq := c.gwc.NewRequest("POST", "/invitation")
	gwReq.SetBody(req)
	return gateway.DoRequest[SendInvitationResponse](ctx, gwReq)
}

func (c *testServiceGatewayClient) TrackInvitation(ctx context.Context, req *TrackInvitationRequest) (<-chan *TrackInvitationResponse, <-chan error, error) {
	gwReq := c.gwc.NewRequest("GET", "/invitation/{id}")
	gwReq.SetPathParam("id", fmt.Sprintf("%v", req.Id))
	q := url.Values{}
	if req.Type != nil {
		q.Add("type", req.Type.String())
	}
	gwReq.SetQueryParamsFromValues(q)
	return gateway.DoStreamingRequest[TrackInvitationResponse](ctx, c.gwc, gwReq)
}
