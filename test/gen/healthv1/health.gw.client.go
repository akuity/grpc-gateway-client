// Code generated by protoc-gen-grpc-gateway-client. DO NOT EDIT.
// source: healthv1/health.proto

package healthv1

import (
	context "context"
	fmt "fmt"
	gateway "github.com/akuity/grpc-gateway-client/pkg/grpc/gateway"
	url "net/url"
)

// HealthGatewayClient is the interface for Health service client.
type HealthGatewayClient interface {
	Check(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	Watch(context.Context, *HealthCheckRequest) (<-chan *HealthCheckResponse, <-chan error, error)
}

func NewHealthGatewayClient(c gateway.Client) HealthGatewayClient {
	return &healthGatewayClient{
		gwc: c,
	}
}

type healthGatewayClient struct {
	gwc gateway.Client
}

func (c *healthGatewayClient) Check(ctx context.Context, req *HealthCheckRequest) (*HealthCheckResponse, error) {
	gwReq := c.gwc.NewRequest("GET", "/healthz")
	q := url.Values{}
	q.Add("service", fmt.Sprintf("%v", req.Service))
	gwReq.SetQueryParamsFromValues(q)
	return gateway.DoRequest[HealthCheckResponse](ctx, gwReq)
}

func (c *healthGatewayClient) Watch(ctx context.Context, req *HealthCheckRequest) (<-chan *HealthCheckResponse, <-chan error, error) {
	gwReq := c.gwc.NewRequest("GET", "/healthz/watch")
	q := url.Values{}
	q.Add("service", fmt.Sprintf("%v", req.Service))
	gwReq.SetQueryParamsFromValues(q)
	return gateway.DoStreamingRequest[HealthCheckResponse](ctx, c.gwc, gwReq)
}
